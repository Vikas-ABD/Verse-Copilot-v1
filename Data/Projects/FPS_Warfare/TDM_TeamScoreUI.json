{
  "file_name": "TDM_TeamScoreUI.verse",
  "questions": [
    "How do I create a team score UI for a TDM game mode with progress bars?",
    "What is the Verse code for a HUD that shows two competing team scores and a round timer?",
    "How can I build a per-player UI that displays global team scores?"
  ],
  "explanation": "This script defines a 'tdm_team_score_ui' class, which is a dedicated UI manager for displaying the score and round timer in a Team Deathmatch game mode. It is not a device itself but a helper class intended to be controlled by a main game manager.\n\n- **Structure:** The class manages UI elements on a per-player basis using maps to store each player's unique canvas and widgets. This ensures that each player has their own instance of the UI.\n- **Core Components:** It heavily utilizes the 'ui_progress_bar' class (from 'UI_progressbar.verse') to create visual bars for each team's score. It also includes 'text_block' widgets for the numerical score and the central round timer.\n- **Functionality:** The 'AddTeamScoreUIToPlayer' function dynamically builds this complex UI and adds it to a specific player's screen. Other scripts are expected to call public functions on this class to update the text of the timer and the progress of the two team score bars.",
  "code": "using { /UnrealEngine.com/Temporary/UI }\nusing { /UnrealEngine.com/Temporary/SpatialMath }\nusing { /Verse.org/Colors }\nusing { /Fortnite.com/UI }\nusing { /Verse.org/Simulation }\nusing { /Verse.org/Assets }\n\n\ntdm_team_score_ui<public>:=class(){\n    UIClosedEvent:event():=event(){}\n    MaybeUIControllPanel:?CustomUI.ui_controll_panel_device = false\n\n    var PerPlayerCanvas:[player]?canvas=map{}\n\n    var PerPlayerRoundTimerTextBox:[player]?text_block = map{}\n\n    var PerPlayerTeam_1_Score_TextBox:[player]?text_block = map{}\n    var PerPlayerTeam_2_Score_TextBox:[player]?text_block = map{}\n    \n    var PerPlayerTeam_2_ProgressBar:[player]?ui_progress_bar = map{}\n    var PerPlayerTeam_2_ProgressBarOverlay:[player]?overlay = map{}\n\n    var PerPlayerTeam_1_ProgressBar:[player]?ui_progress_bar = map{}\n    var PerPlayerTeam_1_ProgressBarOverlay:[player]?overlay = map{}\n\n    \n    var  MaxScoreValue:float=0.0\n    # var StartedUpdating:logic=false\n    Init<public>(MaxScore:float):void={\n        set  MaxScoreValue = MaxScore\n    }\n\n    RemoveTeamScoreUIFromPlayer(Agent:agent):void={\n        \n        if:\n            InPlayer:=player[Agent]\n            PlayerUI:= GetPlayerUI[InPlayer]\n            MyCanvas :=PerPlayerCanvas[InPlayer]?\n        then:\n            Print(\"Remove Team Score UI From Player\")\n\n            PlayerUI.RemoveWidget(MyCanvas)\n\n            UIClosedEvent.Signal()\n            # if(set PerPlayerCanvas[InPlayer] = false){}\n\n            if( set PerPlayerRoundTimerTextBox[InPlayer] = false) {}\n            if( set PerPlayerTeam_1_Score_TextBox[InPlayer] = false) {}\n            if( set PerPlayerTeam_2_Score_TextBox[InPlayer] = false) {}\n            if( set PerPlayerTeam_2_ProgressBar[InPlayer] = false) {}\n            if( set PerPlayerTeam_2_ProgressBarOverlay[InPlayer] = false) {}\n            if( set PerPlayerTeam_1_ProgressBar[InPlayer] = false) {}\n            if( set PerPlayerTeam_1_ProgressBarOverlay[InPlayer] = false) {}\n\n    }\n\n\n    AddTeamScoreUIToPlayer<public>(Agent:agent):void={\n\n        if:\n            InPlayer:=player[Agent]\n            PlayerUI:= GetPlayerUI[InPlayer]\n            \n        then:  \n            Canvas :=  CreateUI(Agent)\n\n            if:\n                MyCanvas := PerPlayerCanvas[InPlayer]?\n            then:\n                PlayerUI.RemoveWidget(MyCanvas)\n                PlayerUI.RemoveWidget(MyCanvas)\n                PlayerUI.RemoveWidget(MyCanvas)\n                if(set PerPlayerCanvas[InPlayer] = false){}\n\n            PlayerUI.AddWidget(Canvas,player_ui_slot{InputMode := ui_input_mode.None, ZOrder := 1})\n\n            if(set PerPlayerCanvas[InPlayer] = option{Canvas}){}\n\n            # if:\n            #   not StartedUpdating?\n            # then:\n            #   set StartedUpdating = true\n                # spawn{UpdateTimerText()}\n                # spawn{UpdateTeamScore()}\n                \n    }\n\n    \n\n    CreateUI<private>(Agent:agent):canvas={\n\n        if:\n            Player := player[Agent]\n            UIControllPanel := MaybeUIControllPanel?\n        then:\n            Team_1_ProgressBar:= Make_ui_progress_bar( 0.0 , MaxScoreValue ,ui_progress_bar_LeftToRight,vector2{X:=250.0,Y:=25.0}, ?InFrontColor:=option{UIControllPanel.Team_1_BarSettings.ForegroundColor},  ?InBackTexture:=option{UIAssets.ProgressBar_BG}) \n            if(set PerPlayerTeam_1_ProgressBar[Player] = option{Team_1_ProgressBar}){}\n            \n            Team_2_ProgressBar:= Make_ui_progress_bar( 0.0 , MaxScoreValue ,ui_progress_bar_LeftToRight,vector2{X:=250.0,Y:=25.0}, ?InFrontColor:=option{UIControllPanel.Team_2_BarSettings.ForegroundColor},  ?InBackTexture:=option{UIAssets.ProgressBar_BG}) \n            if(set PerPlayerTeam_2_ProgressBar[Player] = option{Team_2_ProgressBar}){}\n            \n\n            RoundTimerText := text_block{DefaultText:= TextForUI(\"00:00\"), DefaultTextColor:= UIControllPanel.GetDefaultTextColor()}\n            if(set PerPlayerRoundTimerTextBox[Player] = option{RoundTimerText}){}\n\n            Team_1_Score_TextBox := text_block{DefaultText:= TextForUI(\"0\"), DefaultTextColor:=  UIControllPanel.GetDefaultTextColor()}\n            if(set PerPlayerTeam_1_Score_TextBox[Player] = option{Team_1_Score_TextBox}){}\n\n            Team_2_Score_TextBox := text_block{DefaultText:= TextForUI(\"0\"), DefaultTextColor:=  UIControllPanel.GetDefaultTextColor()}\n            if(set PerPlayerTeam_2_Score_TextBox[Player] = option{Team_2_Score_TextBox}){}\n\n            Team_1_ProgressBarOverlay:=overlay:\n                Slots:=array:\n            if(set PerPlayerTeam_1_ProgressBarOverlay[Player]=option{Team_1_ProgressBarOverlay}){}\n\n            Team_2_ProgressBarOverlay:=overlay:\n                Slots:=array:\n            if(set PerPlayerTeam_2_ProgressBarOverlay[Player]=option{Team_2_ProgressBarOverlay}){}\n\n        \n        MyStatsOverlay:=overlay:\n            Slots := array:\n                overlay_slot:\n                    HorizontalAlignment := horizontal_alignment.Center\n                    VerticalAlignment := vertical_alignment.Fill\n\n                    Widget:= stack_box:\n                        Orientation:= orientation.Vertical\n                        Slots := array:\n                            stack_box_slot:\n                                HorizontalAlignment := horizontal_alignment.Fill\n                                VerticalAlignment := vertical_alignment.Fill\n\n                                Widget := overlay:\n                                    Slots := array:\n                                        overlay_slot:\n                                            HorizontalAlignment := horizontal_alignment.Center\n                                            VerticalAlignment := vertical_alignment.Center\n                                            Padding := margin{Top := 0.0, Left := 35.0, Right := 0.0, Bottom := 0.0}\n\n                                            Widget := if(Player := player[Agent], RoundTimerTextBox := PerPlayerRoundTimerTextBox[Player]?) then RoundTimerTextBox else text_block{DefaultText:= TextForUI(\"00:00\")}\n\n                            stack_box_slot:\n                                HorizontalAlignment := horizontal_alignment.Fill\n                                VerticalAlignment := vertical_alignment.Fill\n\n                                Widget := overlay:\n                                    Slots := array:\n                                        overlay_slot:\n                                            HorizontalAlignment := horizontal_alignment.Fill\n                                            VerticalAlignment := vertical_alignment.Fill\n\n                                            Widget := color_block{DefaultOpacity:=0.05 ,\n                                            DefaultColor := NamedColors.WhiteSmoke,\n                                            DefaultDesiredSize:=vector2{X:= 342.0, Y:= 90.0}}\n\n                                        overlay_slot:\n                                            HorizontalAlignment := horizontal_alignment.Fill\n                                            VerticalAlignment := vertical_alignment.Fill\n\n                                            Widget := overlay:\n                                                Slots := array:\n                                                    overlay_slot:\n                                                        HorizontalAlignment := horizontal_alignment.Fill\n                                                        VerticalAlignment := vertical_alignment.Fill\n                                                        Padding := margin{Top := 5.0, Left := 10.0, Right := 10.0, Bottom := 5.0}\n\n                                                        Widget:= stack_box:\n                                                            Orientation:= orientation.Vertical\n                                                            Slots := array:\n                                                                stack_box_slot:\n                                                                    HorizontalAlignment := horizontal_alignment.Fill\n                                                                    VerticalAlignment := vertical_alignment.Top\n\n                                                                    Widget := stack_box:\n                                                                        Orientation:= orientation.Horizontal\n                                                                        Slots := array:\n                                                                            stack_box_slot:\n                                                                                Distribution := option{0.25}\n                                                                                HorizontalAlignment := horizontal_alignment.Fill\n                                                                                VerticalAlignment := vertical_alignment.Center\n                                        \n                                                                                Widget := overlay:\n                                                                                    Slots := array:\n                                                                                        overlay_slot:\n                                                                                            HorizontalAlignment := horizontal_alignment.Center\n                                                                                            VerticalAlignment := vertical_alignment.Center\n\n                                                                                            Widget := if(Player := player[Agent], Team_1_Score_TextBox := PerPlayerTeam_1_Score_TextBox[Player]?) then Team_1_Score_TextBox else text_block{DefaultText:= TextForUI(\"00:00\")}\n\n                                                                            stack_box_slot:\n                                                                                Distribution := option{1.0}\n                                                                                HorizontalAlignment := horizontal_alignment.Fill\n                                                                                VerticalAlignment := vertical_alignment.Center\n                                        \n                                                                                Widget := if(Player := player[Agent], Team_1_ProgressBarOverlay := PerPlayerTeam_1_ProgressBarOverlay[Player]?) then Team_1_ProgressBarOverlay else color_block{DefaultOpacity:=0.0}\n                                                                                                \n\n                                                                stack_box_slot:\n                                                                    HorizontalAlignment := horizontal_alignment.Fill\n                                                                    VerticalAlignment := vertical_alignment.Bottom\n\n                                                                    Widget := stack_box:\n                                                                        Orientation:= orientation.Horizontal\n                                                                        Slots := array:\n                                                                            stack_box_slot:\n                                                                                Distribution := option{0.25}\n                                                                                HorizontalAlignment := horizontal_alignment.Fill\n                                                                                VerticalAlignment := vertical_alignment.Center\n                                        \n                                                                                Widget := overlay:\n                                                                                    Slots := array:\n                                                                                        overlay_slot:\n                                                                                            HorizontalAlignment := horizontal_alignment.Center\n                                                                                            VerticalAlignment := vertical_alignment.Center\n\n                                                                                            Widget := if(Player := player[Agent], Team_2_Score_TextBox := PerPlayerTeam_2_Score_TextBox[Player]?) then Team_2_Score_TextBox else text_block{DefaultText:= TextForUI(\"00:00\")}\n\n                                                                            stack_box_slot:\n                                                                                Distribution := option{1.0}\n                                                                                HorizontalAlignment := horizontal_alignment.Fill\n                                                                                VerticalAlignment := vertical_alignment.Center\n                                        \n                                                                                Widget := if(Player := player[Agent],Team_2_ProgressBarOverlay := PerPlayerTeam_2_ProgressBarOverlay[Player]?) then Team_2_ProgressBarOverlay else color_block{DefaultOpacity:=0.0}\n\n \n\n        MyCanvas :=canvas:\n            Slots:=array:\n                canvas_slot:\n                    Anchors := anchors{Minimum := vector2{X:= 0.5,Y:= 0.0}, Maximum := vector2{X:=0.5, Y:= 0.0}}\n                    Alignment := vector2{X:= 0.5, Y:= 0.0}\n                    Offsets := margin{Top := 333.0, Left := -750.0, Right := 0.0, Bottom := 0.0}\n                    SizeToContent := true\n                    ZOrder := 1\n\n                    Widget := MyStatsOverlay\n\n        return MyCanvas\n\n    }\n    \n}",
  "external_calls": [
    "ui_base.verse",
    "UI_progressbar.verse",
    "ui_assets.verse"
  ]
}
