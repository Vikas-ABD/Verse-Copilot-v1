{
  "file_name": "DeathEffect.verse",
  "questions": [
    "How can I spawn a Niagara visual effect when a player is eliminated?",
    "What is the Verse code to get the location of a player's death and spawn a prop there?",
    "I need a script that listens for a player elimination event and then plays a temporary visual effect."
  ],
  "explanation": "This script defines a 'DeathEffect' device that spawns a specified Niagara VFX prop at the location where a player is eliminated and then removes it after a set duration.\n\n- **@editable Properties:**\n  - `DeathNiagaraFX`: This is a 'creative_prop_asset' where you assign the Niagara visual effect you want to spawn.\n  - `ElimMan`: A reference to an 'elimination_manager_device', which the script uses to know when a player is eliminated.\n  - `EffectDuration`: A float that determines how many seconds the visual effect will last before being removed.\n\n- **How it Works:**\n  1. In `OnBegin()`, the script subscribes to the `EliminatedEvent` of the specified elimination manager. This means the `Eliminated()` function will automatically be called whenever a player is eliminated.\n  2. The `Eliminated()` function receives the 'agent' of the player who was eliminated. It gets the player's world position and rotation at the moment of death.\n  3. It then calls `SpawnProp()` to create an instance of the `DeathNiagaraFX` at that exact location.\n  4. Upon successful spawning, it `spawn`s a new coroutine, `DeathNiagaraFXHandle`.\n  5. `DeathNiagaraFXHandle` waits for the `EffectDuration` and then calls `Dispose()` on the prop, removing the visual effect from the game to ensure cleanup.",
  "code": "using { /Fortnite.com/Devices }\nusing { /Verse.org/Simulation }\nusing { /UnrealEngine.com/Temporary/Diagnostics }\nusing { /UnrealEngine.com/Temporary/SpatialMath}\nusing { /Verse.org/Colors }\nusing { /UnrealEngine.com/Temporary/UI }\nusing { /Fortnite.com/UI }\nusing { /Fortnite.com/Characters }\n\nDeathEffect := class(creative_device):\n    @editable\n    DeathNiagaraFX : creative_prop_asset = DefaultCreativePropAsset\n    @editable\n    ElimMan : elimination_manager_device = elimination_manager_device{}\n    @editable\n    EffectDuration : float= 15.0\n\n    OnBegin<override>()<suspends>:void=\n        ElimMan.EliminatedEvent.Subscribe(Eliminated)\n\n    Eliminated(Agent:agent):void=\n        if(Fort := Agent.GetFortCharacter[]):\n            FortTransform:= Fort.GetTransform()\n            Position:= FortTransform.Translation\n            Rotation:= FortTransform.Rotation\n            SpawnedPropResult:= SpawnProp(DeathNiagaraFX, Position, Rotation)   \n\n                Print(\"Spawned NiagaraFX\")\n                if(SpawnedProp := SpawnedPropResult(0)?):\n                    Print(\"SpawnedProp\")\n                    spawn:\n                        DeathNiagaraFXHandle(SpawnedProp)\n    DeathNiagaraFXHandle(NiagaraFXProp : creative_prop)<suspends>:void=\n        Sleep(EffectDuration)\n        NiagaraFXProp.Dispose()\n        Print(\"despawned niagarafx\")",
  "external_calls": []
}