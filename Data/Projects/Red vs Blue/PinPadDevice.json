{
  "file_name": "PinPadDevice.verse",
  "questions": [
    "How do I create an interactive on-screen pin pad UI for players?",
    "What is the Verse code for a keypad where players can enter a code to trigger an event?",
    "I need a script for a passcode device that supports multiple PINs, success/fail triggers, and grants XP."
  ],
  "explanation": "This script defines a 'PinPadDevice' that creates a fully interactive, on-screen keypad UI for players. Players can use it to enter a numeric code, which is then validated to trigger different outcomes.\n\n- **Core Components:**\n  - `passcode` class: A data structure used to define valid PINs. Each passcode can have its own unique PIN, an optional success trigger, and an optional accolade device for granting XP.\n  - `PinPadDevice` class: The main device that manages the entire system. It holds a list of valid passcodes and references to in-world buttons that players interact with to open the UI.\n\n- **How it Works:**\n  1. In `OnBegin`, the device subscribes to the 'InteractedWithEvent' of one or more physical buttons in the world.\n  2. When a player interacts with one of these buttons, the `AddPinPad` function is called for that specific player.\n  3. `AddPinPad` dynamically builds and displays a new pin pad UI canvas just for that player. It stores a reference to this UI and the player's current input in a map, allowing multiple players to use pin pads simultaneously.\n  4. The player clicks the UI buttons (0-9, DEL, etc.) to construct a number string.\n  5. When the player clicks 'ENTER', the `EnterFunc` is called. It compares the player's input string against the list of valid 'Passcodes'.\n  6. If a match is found, it fires the specific success trigger for that passcode and grants XP if configured. If no match is found, it fires a default failure trigger. Finally, the UI is removed from the player's screen.",
  "code": "using { /Fortnite.com/Devices }\nusing { /Verse.org/Simulation }\nusing { /UnrealEngine.com/Temporary/Diagnostics }\nusing { /UnrealEngine.com/Temporary/UI}\nusing { /UnrealEngine.com/Temporary/SpatialMath}\nusing { /Fortnite.com/UI }\nusing { /Verse.org/Colors }\nusing { /Verse.org/Colors/NamedColors }\n \npasscode := class<concrete>:\n    @editable Title : ?string = false\n    @editable PIN : int = 0\n    @editable TriggerSuccess : ?trigger_device = false\n    @editable XP : ?accolades_device = false\n \nPinPadDevice := class(creative_device):\n \n    var StuffPerAgent : [agent]?tuple(canvas,text_block,string) = map{}\n \n    # BUTTONS & TRIGGERS\n    @editable PinPadButtons : []button_device = array{}\n    @editable TriggerFail : trigger_device = trigger_device{}\n    @editable TriggerSuccessDefault : trigger_device = trigger_device{}\n \n    # GENERAL\n    @editable Passcodes : []passcode = array{}\n \n    # CUSTOM COLOR \n    @editable TextColor : color = GreenYellow\n    @editable TextBlockColor : color = Black\n    @editable ForegroundColor : color = MakeColorFromHex(\"#212121\")\n    @editable BackgroundColor : color = MakeColorFromHex(\"#000000\")\n    @editable ForegroundOpacity : float = 0.5\n    @editable BackgroundOpacity : float = 0.1\n \n \n    # Runs when the device is started in a running game\n    OnBegin<override>()<suspends>:void=\n \n        # Init Pinpad Buttons \n        for(Btn : PinPadButtons):\n            Btn.InteractedWithEvent.Subscribe(AddPinPad)\n \n \n    AddPinPad(A:agent):void=\n        if(Stuff:=StuffPerAgent[A]?):\n            #Do not assign\n        else:\n            Val:=MakeCanvas()\n            if:\n                PlayerUI:=GetPlayerUI[player[A]]\n            then:\n                PlayerUI.AddWidget(Val(0),player_ui_slot{InputMode:=ui_input_mode.All})\n                if(set StuffPerAgent[A] = option{(Val(0),Val(1),\"\")}){}\n \n    RemovePinPad(A:agent):void=\n        if(Stuff:=StuffPerAgent[A]?):\n            if:\n                PlayerUI:=GetPlayerUI[player[A]]\n            then:\n                PlayerUI.RemoveWidget(Stuff(0))\n                if(set StuffPerAgent[A] = false){}\n \n    MakeCanvas():tuple(canvas,text_block)=\n        Button0 := button_loud{DefaultText:=S2M(\"0\")}\n        Button0.OnClick().Subscribe(Add0)\n        Button1 := button_loud{DefaultText:=S2M(\"1\")}\n        Button1.OnClick().Subscribe(Add1)\n        Button2 := button_loud{DefaultText:=S2M(\"2\")}\n        Button2.OnClick().Subscribe(Add2)\n        Button3 := button_loud{DefaultText:=S2M(\"3\")}\n        Button3.OnClick().Subscribe(Add3)\n        Button4 := button_loud{DefaultText:=S2M(\"4\")}\n        Button4.OnClick().Subscribe(Add4)\n        Button5 := button_loud{DefaultText:=S2M(\"5\")}\n        Button5.OnClick().Subscribe(Add5)\n        Button6 := button_loud{DefaultText:=S2M(\"6\")}\n        Button6.OnClick().Subscribe(Add6)\n        Button7 := button_loud{DefaultText:=S2M(\"7\")}\n        Button7.OnClick().Subscribe(Add7)\n        Button8 := button_loud{DefaultText:=S2M(\"8\")}\n        Button8.OnClick().Subscribe(Add8)\n        Button9 := button_loud{DefaultText:=S2M(\"9\")}\n        Button9.OnClick().Subscribe(Add9)\n        Delete := button_regular{DefaultText:=S2M(\"DEL\")}\n        Delete.OnClick().Subscribe(DeleteLastChar)\n        Enter := button_regular{DefaultText:=S2M(\"▶️▶️▶️\")}\n        Enter.OnClick().Subscribe(EnterFunc)\n        Cancel := button_quiet{DefaultText:=S2M(\"Cancel\")}\n        Cancel.OnClick().Subscribe(CancelFunc)\n        NumTB := text_block{DefaultText:=S2M(\"\"),DefaultTextColor:=TextColor}\n \n        # Change Opacity With Input Variable\n        var FG_Opacity : type{_X:float where 0.000000 <= _X, _X <= 1.000000} = 0.1 \n        var BG_Opacity : type{_X:float where 0.000000 <= _X, _X <= 1.000000} = 0.1 \n        if (FGO := type{_X:float where 0.000000 <= _X, _X <= 1.000000}[ForegroundOpacity]):\n            Print(\"Forground Opacity Set!\")\n            set FG_Opacity = FGO\n        else:\n            Print(\"Forground Opacity FAIL\")\n \n        if (BGO := type{_X:float where 0.000000 <= _X, _X <= 1.000000}[BackgroundOpacity]):\n            Print(\"Background Opacity Set!\")\n            set BG_Opacity = BGO\n        else:\n            Print(\"Background Opacity FAIL\")\n \n        MyCanvas:= canvas:\n            Slots:=array:\n                canvas_slot:\n                    Anchors:=anchors{Minimum:=vector2{X:=0.5,Y:=0.5},Maximum:=vector2{X:=0.5,Y:=0.5}}\n                    Alignment:=vector2{X:=0.5,Y:=0.5}\n                    SizeToContent:=true\n                    Widget:=overlay:\n                        Slots:=array:\n                            overlay_slot:\n                                #Outside ColorBlock BACKGROUND\n                                HorizontalAlignment:=horizontal_alignment.Fill\n                                VerticalAlignment:=vertical_alignment.Fill\n                                Widget:=color_block{\n                                    DefaultOpacity:=BG_Opacity, # 0.1\n                                    DefaultColor:=BackgroundColor, \n                                    DefaultDesiredSize:=vector2{X:=700.0,Y:=700.0}}\n                            overlay_slot:   \n                                HorizontalAlignment:=horizontal_alignment.Center\n                                VerticalAlignment:=vertical_alignment.Bottom\n                                Padding:=margin{Bottom:=10.0, Top:=20.0}\n                                Widget:=overlay:\n                                    Slots:=array:\n                                        #PinPad ColorBlock FOREGROUND\n                                        overlay_slot:\n                                            HorizontalAlignment:=horizontal_alignment.Fill\n                                            VerticalAlignment:=vertical_alignment.Fill\n                                            Widget:=color_block{\n                                                DefaultOpacity:=FG_Opacity, # 0.5\n                                                DefaultColor:=ForegroundColor}\n                                        #PinPad\n                                        overlay_slot:\n                                            HorizontalAlignment:=horizontal_alignment.Center\n                                            VerticalAlignment:=vertical_alignment.Center\n                                            Padding:=margin{Top:=20.0,Left:=20.0,Bottom:=20.0,Right:=20.0}\n                                            Widget:=stack_box:\n                                                Orientation:=orientation.Vertical\n                                                Slots:=array:\n                                                    #1-3 Stack\n                                                    stack_box_slot:\n                                                        HorizontalAlignment:=horizontal_alignment.Fill\n                                                        VerticalAlignment:=vertical_alignment.Fill\n                                                        Padding:=margin{Top:=25.0,Bottom:=25.0}\n                                                        Widget:=stack_box:\n                                                            Orientation:=orientation.Horizontal\n                                                            Slots:=array:\n                                                                stack_box_slot:\n                                                                    Distribution:=option{1.0}\n                                                                    HorizontalAlignment:=horizontal_alignment.Center\n                                                                    VerticalAlignment:=vertical_alignment.Center\n                                                                    Widget:=Button1\n                                                                stack_box_slot:\n                                                                    Widget:=Button2\n                                                                    Distribution:=option{1.0}\n                                                                    HorizontalAlignment:=horizontal_alignment.Center\n                                                                    VerticalAlignment:=vertical_alignment.Center\n                                                                    Padding:=margin{Left:=20.0,Right:=20.0}\n                                                                stack_box_slot:\n                                                                    Widget:=Button3\n                                                                    Distribution:=option{1.0}\n                                                                    HorizontalAlignment:=horizontal_alignment.Center\n                                                                    VerticalAlignment:=vertical_alignment.Center\n                                                    #4-6\n                                                    stack_box_slot:\n                                                        HorizontalAlignment:=horizontal_alignment.Fill\n                                                        VerticalAlignment:=vertical_alignment.Fill\n                                                        Padding:=margin{Top:=25.0,Bottom:=25.0}\n                                                        Widget:=stack_box:\n                                                            Orientation:=orientation.Horizontal\n                                                            Slots:=array:\n                                                                stack_box_slot:\n                                                                    Distribution:=option{1.0}\n                                                                    HorizontalAlignment:=horizontal_alignment.Center\n                                                                    VerticalAlignment:=vertical_alignment.Center\n                                                                    Widget:=Button4\n                                                                stack_box_slot:\n                                                                    Distribution:=option{1.0}\n                                                                    Widget:=Button5\n                                                                    HorizontalAlignment:=horizontal_alignment.Center\n                                                                    VerticalAlignment:=vertical_alignment.Center\n                                                                    Padding:=margin{Left:=20.0,Right:=20.0}\n                                                                stack_box_slot:\n                                                                    Distribution:=option{1.0}\n                                                                    Widget:=Button6\n                                                                    HorizontalAlignment:=horizontal_alignment.Center\n                                                                    VerticalAlignment:=vertical_alignment.Center\n                                                    #7-9\n                                                    stack_box_slot:\n                                                        HorizontalAlignment:=horizontal_alignment.Fill\n                                                        VerticalAlignment:=vertical_alignment.Fill\n                                                        Padding:=margin{Top:=25.0,Bottom:=25.0}\n                                                        Widget:=stack_box:\n                                                            Orientation:=orientation.Horizontal\n                                                            Slots:=array:\n                                                                stack_box_slot:\n                                                                    Distribution:=option{1.0}\n                                                                    HorizontalAlignment:=horizontal_alignment.Center\n                                                                    VerticalAlignment:=vertical_alignment.Center\n                                                                    Widget:=Button7\n                                                                stack_box_slot:\n                                                                    Widget:=Button8\n                                                                    Distribution:=option{1.0}\n                                                                    HorizontalAlignment:=horizontal_alignment.Center\n                                                                    VerticalAlignment:=vertical_alignment.Center\n                                                                    Padding:=margin{Left:=20.0,Right:=20.0}\n                                                                stack_box_slot:\n                                                                    Widget:=Button9\n                                                                    Distribution:=option{1.0}\n                                                                    HorizontalAlignment:=horizontal_alignment.Center\n                                                                    VerticalAlignment:=vertical_alignment.Center\n                                                    #Delete, 0 and Enter\n                                                    stack_box_slot:\n                                                        HorizontalAlignment:=horizontal_alignment.Fill\n                                                        VerticalAlignment:=vertical_alignment.Fill\n                                                        Padding:=margin{Top:=25.0,Bottom:=25.0}\n                                                        Widget:=stack_box:\n                                                            Orientation:=orientation.Horizontal\n                                                            Slots:=array:\n                                                                stack_box_slot:\n                                                                    Distribution:=option{1.0}\n                                                                    HorizontalAlignment:=horizontal_alignment.Center\n                                                                    VerticalAlignment:=vertical_alignment.Center\n                                                                    Widget:=Delete\n                                                                stack_box_slot:\n                                                                    Widget:=Button0\n                                                                    Distribution:=option{1.0}\n                                                                    HorizontalAlignment:=horizontal_alignment.Center\n                                                                    VerticalAlignment:=vertical_alignment.Center\n                                                                    Padding:=margin{Left:=20.0,Right:=20.0}\n                                                                stack_box_slot:\n                                                                    Widget:=Enter\n                                                                    Distribution:=option{1.0}\n                                                                    HorizontalAlignment:=horizontal_alignment.Center\n                                                                    VerticalAlignment:=vertical_alignment.Center\n                                                    #CANCEL\n                                                    stack_box_slot:\n                                                        HorizontalAlignment:=horizontal_alignment.Fill\n                                                        VerticalAlignment:=vertical_alignment.Fill\n                                                        Padding:=margin{Top:=10.0,Bottom:=5.0}\n                                                        Widget:=stack_box:\n                                                            Orientation:=orientation.Horizontal\n                                                            Slots:=array:\n                                                                stack_box_slot:\n                                                                    Distribution:=option{1.0}\n                                                                    HorizontalAlignment:=horizontal_alignment.Center\n                                                                    VerticalAlignment:=vertical_alignment.Center\n                                                                    Padding:=margin{Left:=5.0, Right:=5.0}\n                                                                    Widget:=Cancel\n                            #Text Block Stuff\n                            overlay_slot:\n                                HorizontalAlignment:=horizontal_alignment.Center\n                                VerticalAlignment:=vertical_alignment.Top\n                                Padding:=margin{Bottom:=45.0, Top:=5.0}\n                                Widget:=overlay:\n                                    Slots:=array:\n                                        overlay_slot:\n                                            Widget:=color_block{DefaultColor:=TextBlockColor,DefaultDesiredSize:=vector2{X:=400.0,Y:=50.0}}\n                                            HorizontalAlignment:=horizontal_alignment.Fill\n                                            VerticalAlignment:=vertical_alignment.Fill\n                                        overlay_slot:\n                                            Widget:=NumTB\n                                            HorizontalAlignment:=horizontal_alignment.Center\n                                            VerticalAlignment:=vertical_alignment.Center\n \n        return (MyCanvas,NumTB)\n \n    Add0(WM:widget_message):void=AddNum(0,WM)\n    Add1(WM:widget_message):void=AddNum(1,WM)\n    Add2(WM:widget_message):void=AddNum(2,WM)\n    Add3(WM:widget_message):void=AddNum(3,WM)\n    Add4(WM:widget_message):void=AddNum(4,WM)\n    Add5(WM:widget_message):void=AddNum(5,WM)\n    Add6(WM:widget_message):void=AddNum(6,WM)\n    Add7(WM:widget_message):void=AddNum(7,WM)\n    Add8(WM:widget_message):void=AddNum(8,WM)\n    Add9(WM:widget_message):void=AddNum(9,WM)\n \n    EnterFunc(WM:widget_message):void=\n \n        Print(\"EnterFunc()\")\n        A := WM.Player\n        if:\n            Stuff:=StuffPerAgent[A]?\n            Input:=Stuff(2)\n        then:\n            var Match : logic = false\n            for(PS:Passcodes,not Match?):\n                Code:=\"{PS.PIN}\"\n                if(Code=Input):\n                    set Match = true # Success\n                    if(InnerTrigger:=PS.TriggerSuccess?): # has trigger\n                        InnerTrigger.Trigger(A)\n                    else:\n                        TriggerSuccessDefault.Trigger(A)\n                    if(GrantXP := PS.XP?): # has accolade\n                        GrantXP.Award(A)\n                    RemovePinPad(A)\n                    return\n        TriggerFail.Trigger(A)\n        RemovePinPad(A)\n \n \n    CancelFunc(WM:widget_message): void=\n        RemovePinPad(WM.Player)\n \n    AddNum(Num:int,WM:widget_message):void=\n        if(Stuff:=StuffPerAgent[WM.Player]?):\n            var String:string=Stuff(2)\n            set String += \"{Num}\" #Add a new number\n            if(set StuffPerAgent[WM.Player] = option{(Stuff(0),Stuff(1),String)}){}\n            UpdateUI(WM)\n \n    UpdateUI(WM:widget_message):void=\n        if(Stuff:=StuffPerAgent[WM.Player]?):\n            var String:string=Stuff(2)\n            TB:=Stuff(1)\n            TB.SetText(S2M(\"{String}\"))\n \n    DeleteLastChar(WM:widget_message):void=\n        if(Stuff:=StuffPerAgent[WM.Player]?):\n            var String: string = Stuff(2)\n            var UpdatedString : string = \"\"\n            for(Index->S:String):\n                if(Index = String.Length-1):\n                    #This the last character, remove it\n                else:\n                    set UpdatedString += \"{S}\"\n            if(set StuffPerAgent[WM.Player] = option{(Stuff(0),Stuff(1),UpdatedString)}){}\n            UpdateUI(WM)",
  "external_calls": []
}