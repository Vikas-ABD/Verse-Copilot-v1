{
  "file_name": "DoubleDamage.verse",
  "questions": [
    "How do I create a damage boost power-up for a specific class?",
    "What is the Verse code to set the multiplier on a `damage_amplifier_powerup_device`?",
    "How can I give a power-up item to a player after they spawn?"
  ],
  "explanation": "This script defines a 'DoubleDamage' device that provides a damage amplifier power-up to players of a specific class.\n\n- **Class System:** It uses a 'tracker_device' to check if a spawning player's 'Class' ID matches the one set on the device.\n- **Power-up Configuration:** In `OnBegin`, it configures the '@editable damage_amplifier_powerup_device' by setting its damage multiplier (`Magnitude`) to the value of 'ScaleDamage'.\n- **Activation:** For players of the correct class, the 'GiveItem' function first spawns the power-up into the world using `.Spawn()` and then immediately forces the player to collect it using `.Pickup(Agent)`. This effectively grants the damage boost directly to the eligible player.",
  "code": "using { /Fortnite.com/Devices }\nusing { /Verse.org/Simulation }\nusing { /UnrealEngine.com/Temporary/Diagnostics }\nusing { /Fortnite.com/Characters}\nusing { /Fortnite.com/Game }\nusing { /UnrealEngine.com/Temporary/SpatialMath }\nusing { /Verse.org/Random }\n\nDoubleDamage := class(creative_device):\n\n    @editable var Class : int = 0\n    @editable ClassTracker : tracker_device = tracker_device{}\n    @editable HUDablity : hud_message_device = hud_message_device{}\n\n\n    @editable Damage : damage_amplifier_powerup_device = damage_amplifier_powerup_device{}\n    @editable ScaleDamage : float = 0.0\n\n    OnBegin<override>()<suspends>:void=\n        Damage.SetMagnitude(ScaleDamage)\n        InitSpawners()\n\n    InitSpawners() : void=\n        Spawners := FindCreativeObjectsWithTag(spawner{})\n        for (Obj : Spawners):\n            if (Spawner := player_spawner_device[Obj]):\n                Spawner.SpawnedEvent.Subscribe(OnPlayerSpawned)\n\n    OnPlayerSpawned(Agent : agent): void=\n        if (Player := player[Agent]):\n            spawn{GiveItem(Agent)}\n\n    GiveItem(Agent : agent)<suspends>:void=\n        Sleep(1.0)\n        if(ClassTracker.GetValue(Agent) = Class):\n            Damage.Spawn()\n            Damage.Pickup(Agent)\n            HUDablity.Show(Agent)           \n            ",
  "external_calls": [
    "tags.verse"
  ]
}
