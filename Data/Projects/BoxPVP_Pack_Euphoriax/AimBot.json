{
  "file_name": "AimBot.verse",
  "questions": [
    "How do I create a temporary aim assist ability that a player can activate with an item?",
    "What is the Verse code for giving a special power-up only to players of a specific class?",
    "How can I use a signal remote to enable a `gameplay_controls_third_person_device` for a set duration?"
  ],
  "explanation": "This script defines an 'AimBot' device that provides a temporary aim-assist power-up to players belonging to a specific class. It defines its own 'spawner' tag to find player spawners in the level.\n\n- **Class System:** The device is configured with a 'Class' ID. It checks a 'tracker_device' to see if a spawning player's class matches this ID.\n- **Activation Flow:** If the player is the correct class, they are granted an item managed by a 'signal_remote_manager_device'. When the player uses this remote, it triggers the aimbot effect.\n- **Core Logic:** The 'BeginAimbot' function enables a 'gameplay_controls_third_person_device' for the activating player, applying the aim-assist effect. After a configurable duration ('AimbotLengthTime'), it automatically removes the effect and disables the device, ensuring the power-up is temporary.",
  "code": "using { /Fortnite.com/Devices }\nusing { /Verse.org/Simulation }\nusing { /UnrealEngine.com/Temporary/Diagnostics }\nAimBot := class(creative_device):\n    @editable var Class : int = 0\n    @editable ClassTracker : tracker_device = tracker_device{}\n    @editable HUDablity : hud_message_device = hud_message_device{}\n\n    @editable Superpowerused : accolades_device = accolades_device{}\n\n    @editable AimDevice : gameplay_controls_third_person_device = gameplay_controls_third_person_device{}\n    @editable RemoteControl : signal_remote_manager_device = signal_remote_manager_device{}\n\n    @editable ItemGranter : item_granter_device = item_granter_device{}\n\n    @editable AimbotLengthTime : float = 0.0\n\n    OnBegin<override>()<suspends>:void=\n        AimDevice.Disable()\n        InitSpawners()\n\n    InitSpawners() : void=\n        Spawners := FindCreativeObjectsWithTag(spawner{})\n        for (Obj : Spawners):\n            if (Spawner := player_spawner_device[Obj]):\n                Spawner.SpawnedEvent.Subscribe(OnPlayerSpawned)\n\n    OnPlayerSpawned(Agent : agent): void=\n        if (Player := player[Agent]):\n            spawn{GiveItem(Agent)}\n\n    GiveItem(Agent : agent)<suspends>:void=\n        Sleep(1.0)\n        if(ClassTracker.GetValue(Agent) = Class):\n            RemoteControl.PrimarySignalEvent.Subscribe(BeginAimbotSleep)\n            ItemGranter.GrantItem(Agent)\n            HUDablity.Show(Agent)\n\n    BeginAimbotSleep(Agent :agent):void=\n        spawn{BeginAimbot(Agent)}\n\n    BeginAimbot(Agent:agent)<suspends> : void=\n        if(ClassTracker.GetValue(Agent) = Class):\n            Superpowerused.Award(Agent)\n            AimDevice.Enable()\n            AimDevice.AddTo(Agent)\n\n            Sleep(AimbotLengthTime)\n\n            AimDevice.RemoveFrom(Agent)\n            AimDevice.Disable()",
  "external_calls": []
}