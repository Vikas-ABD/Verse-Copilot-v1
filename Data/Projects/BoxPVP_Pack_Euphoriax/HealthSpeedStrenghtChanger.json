{
  "file_name": "HealthSpeedStrenghtChanger.verse",
  "questions": [
    "How can I create a power-up that reduces a player's health in exchange for more damage and speed?",
    "What is the Verse code for a class-specific passive ability that changes a player's stats?",
    "How do I correctly reduce a player's health and shield by a specific amount?"
  ],
  "explanation": "This script defines a 'HealthSpeedStrenghtChanger' device that acts as a passive power-up for a specific player class. It trades a portion of the player's health and shield for increased damage and movement speed.\n\n- **Class System:** It uses a 'tracker_device' to identify players belonging to the correct 'Class' when they spawn.\n- **Activation:** The effect is applied automatically to eligible players shortly after they spawn.\n- **Core Logic:** The 'HealthtoStrength' function calculates the health and shield reduction. It correctly prioritizes depleting the shield first before reducing health. After adjusting the player's health, it grants them a 'damage_amplifier_powerup_device' and activates a 'movement_modulator_device', effectively completing the stat trade.",
  "code": "using { /Fortnite.com/Devices }\nusing { /Verse.org/Simulation }\nusing { /UnrealEngine.com/Temporary/Diagnostics }\nusing { /Fortnite.com/Characters}\nusing { /Fortnite.com/Game }\nusing { /UnrealEngine.com/Temporary/SpatialMath }\nusing { /Verse.org/Random }\n\nHealthSpeedStrenghtChanger := class(creative_device):\n\n    @editable var Class : int = 0\n    @editable ClassTracker : tracker_device = tracker_device{}\n    @editable HUDablity : hud_message_device = hud_message_device{}\n\n    @editable Damage : damage_amplifier_powerup_device = damage_amplifier_powerup_device{}\n    @editable Speed : movement_modulator_device = movement_modulator_device{}\n    @editable ReduceHealth : float = 0.0\n    @editable ScaleDamage : float = 0.0\n\n    var THealth : float = 0.0\n    var NHealth : float = 0.0\n    var TShield : float = 0.0\n    var NShield : float = 0.0\n\n    # Runs when the device is started in a running game\n    OnBegin<override>()<suspends>:void=\n        Damage.SetMagnitude(ScaleDamage)\n        InitSpawners()\n\n    InitSpawners() : void=\n        Spawners := FindCreativeObjectsWithTag(spawner{})\n        for (Obj : Spawners):\n            if (Spawner := player_spawner_device[Obj]):\n                Spawner.SpawnedEvent.Subscribe(OnPlayerSpawned)\n\n    OnPlayerSpawned(Agent : agent): void=\n        if (Player := player[Agent]):\n            spawn{CheckClass(Agent)}\n\n    CheckClass(Agent : agent)<suspends>:void=\n        Sleep(1.0)\n        if(ClassTracker.GetValue(Agent) = Class):\n            spawn:\n                HealthtoStrength(Agent)\n\n    HealthtoStrength(Agent:agent)<suspends> : void=\n        HUDablity.Show(Agent)\n        if (Player := player[Agent], FC := Player.GetFortCharacter[]):\n            set TShield = FC.GetShield()\n            if (TShield <= ReduceHealth):\n                set NShield = 0.0\n                set THealth = FC.GetHealth()\n                set NHealth = THealth - (ReduceHealth - TShield)\n                FC.SetShield(NShield)\n                FC.SetHealth(NHealth)\n\n            else:\n                set  TShield = FC.GetShield()\n                set NShield = TShield - ReduceHealth\n                FC.SetShield(NShield)\n\n        Damage.Spawn()\n        Damage.Pickup(Agent)  \n        Speed.Activate(Agent)",
  "external_calls": [
    "tags.verse"
  ]
}