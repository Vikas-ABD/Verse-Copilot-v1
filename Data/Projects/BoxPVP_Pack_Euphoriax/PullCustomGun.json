{
  "file_name": "PullCustomGun.verse",
  "questions": [
    "How do I create a custom weapon that pulls enemies towards me when I hit them?",
    "What is the Verse code for a 'grapple gun' type effect that activates on dealing damage?",
    "How can I use a movement modulator to pull a damaged player towards the attacker?"
  ],
  "explanation": "This script defines a 'PullCustomGun' device that creates a special weapon for a specific player class. When a player using this weapon damages an enemy, it pulls the enemy towards them.\n\n- **Class System:** It uses a 'tracker_device' to ensure only players of the correct 'Class' receive the weapon via an 'item_granter_device'.\n- **Activation:** The logic is triggered by the 'DamagedEvent' of all players.\n- **Core Logic:** When a player deals damage, the 'OnPlayerDamaged' function checks if the attacker is holding the 'PullGun' item. If so, it calculates the reverse direction of the attacker's view, teleports a 'movement_modulator_device' to face that direction, and then activates it on the damaged player. This creates a force that pulls the target towards the attacker.",
  "code": "using { /Fortnite.com/Devices }\nusing { /Verse.org/Simulation }\nusing { /UnrealEngine.com/Temporary/Diagnostics }\nusing { /Fortnite.com/Characters}\nusing { /Fortnite.com/Game }\nusing { /UnrealEngine.com/Temporary/SpatialMath }\n\nPullCustomGun := class(creative_device):\n\n    @editable var Class : int = 0\n    @editable ClassTracker : tracker_device = tracker_device{}\n    @editable HUDablity : hud_message_device = hud_message_device{}\n\n    @editable PullGun : conditional_button_device = conditional_button_device{}\n    @editable PullGunEffect : movement_modulator_device = movement_modulator_device{}\n    @editable ItemGranter:item_granter_device = item_granter_device{}\n\n    @editable Superpowerused : accolades_device = accolades_device{}\n    \n    OnBegin<override>()<suspends>:void=\n        InitSpawners()\n        for (Player : GetPlayspace().GetPlayers(), FortCharacter := Player.GetFortCharacter[]):\n            FortCharacter.DamagedEvent().Subscribe(OnPlayerDamaged)\n            FortCharacter.DamagedShieldEvent().Subscribe(OnPlayerDamaged)\n            \n    InitSpawners() : void=\n        Spawners := FindCreativeObjectsWithTag(spawner{})\n        for (Obj : Spawners):\n            if (Spawner := player_spawner_device[Obj]):\n                Spawner.SpawnedEvent.Subscribe(OnPlayerSpawned)\n\n    OnPlayerSpawned(Agent : agent): void=\n        if (Player := player[Agent]):\n            spawn{GetWeapon(Agent)}\n\n    GetWeapon(Agent : agent)<suspends>:void=\n        Sleep(1.0)\n        if(ClassTracker.GetValue(Agent) = Class):\n            ItemGranter.GrantItem(Agent)\n            HUDablity.Show(Agent)\n            \n    OnPlayerDamaged(DamageResult: damage_result): void = \n        if: \n            Instigator := DamageResult.Instigator?\n            Agent := Instigator.GetInstigatorAgent[]\n            PullGun.IsHoldingItem[Agent]\n            Target:= fort_character[DamageResult.Target]\n        then:\n                spawn:\n                    PushOrPullGunPlayer(Target,Agent)\n\n    PushOrPullGunPlayer(Target : fort_character,Agent:agent)<suspends> : void=\n        if(Player := player[Agent],FC:= Player.GetFortCharacter[], TargetAgent := Target.GetAgent[]):\n            if(Target = FC):  \n                block:\n            else:\n                FCRotation := FC.GetTransform().Rotation\n                DeviceLocation := PullGunEffect.GetTransform().Translation\n                NEWRotation := FCRotation.ApplyYaw(3.14)\n                if(PullGunEffect.TeleportTo[DeviceLocation,NEWRotation]){}\n                    Superpowerused.Award(Agent)\n                    PullGunEffect.Activate(TargetAgent)",
  "external_calls": [
    "tags.verse"
  ]
}