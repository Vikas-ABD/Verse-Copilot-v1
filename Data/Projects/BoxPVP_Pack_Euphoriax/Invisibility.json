{
  "file_name": "Invisibility.verse",
  "questions": [
    "How do I make a player invisible only when they are holding a specific item?",
    "What is the Verse code for a class-specific invisibility cloak that requires a keycard?",
    "How can I use a conditional button to continuously check a player's inventory and toggle their visibility?"
  ],
  "explanation": "This script defines an 'Invisibility' device that grants a passive invisibility power-up to players of a specific class. The invisibility is only active while the player is holding a specific item (a keycard).\n\n- **Class System:** It uses a 'tracker_device' to identify players belonging to the correct 'Class' when they spawn.\n- **Activation:** Eligible players are granted an item via an 'item_granter_device'. The script then starts a continuous loop for that player.\n- **Core Logic:** The 'CheckForCard' function runs a loop that periodically checks if the player is holding the item registered with the 'CardDetector' (a 'conditional_button_device'). If the player is holding the item, their character is hidden using `FC.Hide()`. If they are not holding it, their character is made visible again with `FC.Show()`.",
  "code": "using {/Fortnite.com/Devices}\nusing {/Fortnite.com/UI}\nusing {/Fortnite.com/Game}\nusing {/Fortnite.com/Characters}\nusing {/Fortnite.com/Playspaces}\nusing {/Verse.org/Simulation}\nusing {/Verse.org/Random}\nusing {/UnrealEngine.com/Temporary/Diagnostics}\nusing {/UnrealEngine.com/Temporary/UI}\nusing {/UnrealEngine.com/Temporary/SpatialMath}\n\nInvisibility := class(creative_device):\n\n    @editable var Class : int = 0\n    @editable ClassTracker : tracker_device = tracker_device{}\n    @editable HUDablity : hud_message_device = hud_message_device{}\n\n    @editable CardDetector:conditional_button_device = conditional_button_device{}\n    @editable ItemGranter:item_granter_device = item_granter_device{}\n\n    OnBegin<override>()<suspends>:void=\n        InitSpawners()\n\n    InitSpawners() : void=\n        Spawners := FindCreativeObjectsWithTag(spawner{})\n        for (Obj : Spawners):\n            if (Spawner := player_spawner_device[Obj]):\n                Spawner.SpawnedEvent.Subscribe(OnPlayerSpawned)\n            \n    OnPlayerSpawned(Agent : agent): void=\n        if (Player := player[Agent]):\n            spawn{CheckClass(Agent)}\n\n    CheckClass(Agent : agent)<suspends>:void=\n        Sleep(1.0)\n        if(ClassTracker.GetValue(Agent) = Class):\n            HUDablity.Show(Agent)\n            ItemGranter.GrantItem(Agent)\n            spawn:\n                CheckForCard()\n\n    CheckForCard()<suspends>:void=\n        Sleep(1.0)\n        AllPlayers:=GetPlayspace().GetPlayers()\n            for(Player:AllPlayers):\n                if(IsAgent:agent = agent[Player]):\n                    if(ClassTracker.GetValue(IsAgent) = Class):\n                        loop:\n                            Sleep(0.5)\n                            if(CardDetector.IsHoldingItem[IsAgent]):\n                                HidePlayer(IsAgent)\n                            else:\n                                ShowPlayer(IsAgent)\n\n    ShowPlayer(Agent:agent):void=\n        if(FC:=Agent.GetFortCharacter[]):\n            FC.Show()\n    HidePlayer(Agent:agent):void=\n        if(FC:=Agent.GetFortCharacter[]):\n            FC.Hide()",
  "external_calls": [
    "tags.verse"
  ]
}
