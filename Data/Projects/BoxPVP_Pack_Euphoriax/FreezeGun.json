{
  "file_name": "FreezeGun.verse",
  "questions": [
    "How do I create a freeze gun that stuns players on hit?",
    "What is the Verse code to put a character in stasis when they take damage from a specific weapon?",
    "How can I make a weapon that only works for a specific player class and freezes enemies?"
  ],
  "explanation": "This script defines a 'FreezeGun' device that gives players of a specific class a weapon that can temporarily freeze enemies. \n\n- **Class System:** It uses a 'tracker_device' to ensure only players of the correct 'Class' receive the weapon.\n- **Activation:** The core logic is triggered by the 'DamagedEvent' on every player's character. \n- **Core Logic:** When a player takes damage, the 'OnPlayerDamage' function checks if the attacker (`Instigator`) is holding the item registered with the 'ConditionalButton' (the freeze gun). If they are, the script calls the 'FreezePlayer' function on the player who was damaged (`Target`). This function uses `PutInStasis()` to freeze the target for a configurable 'FreezeTime', after which `ReleaseFromStasis()` is called to unfreeze them.",
  "code": "using { /Fortnite.com/Devices }\nusing { /Verse.org/Simulation }\nusing { /UnrealEngine.com/Temporary/Diagnostics }\nusing { /Verse.org/Random }\nusing { /Fortnite.com/Characters }\nusing { /Fortnite.com/Game }\nusing { /Fortnite.com/UI }\nusing { /Verse.org/Simulation/Tags }\nusing { /UnrealEngine.com/Temporary/UI }\nusing { /Verse.org/Colors/NamedColors }\nusing { /UnrealEngine.com/Temporary/SpatialMath }\n\n\nFreezeGun := class(creative_device):\n\n    @editable var Class : int = 0\n    @editable ClassTracker : tracker_device = tracker_device{}\n    @editable HUDablity : hud_message_device = hud_message_device{}\n    \n    @editable Superpowerused : accolades_device = accolades_device{}\n\n    @editable ConditionalButton : conditional_button_device = conditional_button_device{}\n    @editable ItemGranter : item_granter_device = item_granter_device{} \n\n    @editable FreezeTime : float = 2.0\n\n    OnBegin<override>()<suspends> : void =\n        InitSpawners()\n        for (Player : GetPlayspace().GetPlayers(), FortCharacter := Player.GetFortCharacter[]):\n            FortCharacter.DamagedEvent().Subscribe(OnPlayerDamage)\n\n    InitSpawners() : void=\n        Spawners := FindCreativeObjectsWithTag(spawner{})\n        for (Obj : Spawners):\n            if (Spawner := player_spawner_device[Obj]):\n                Spawner.SpawnedEvent.Subscribe(OnPlayerSpawned)\n\n    OnPlayerSpawned(Agent : agent): void=\n        if (Player := player[Agent]):\n            spawn{CheckClass(Player)}\n\n    CheckClass(Player : player)<suspends>:void=\n        Sleep(1.0)\n        if(ClassTracker.GetValue(Player) = Class):\n            HUDablity.Show(Player)\n            ItemGranter.GrantItem(Player)\n            if (FortCharacter := Player.GetFortCharacter[]):  \n                FortCharacter.DamagedEvent().Subscribe(OnPlayerDamage)\n                \n    OnPlayerDamage(DamageResult : damage_result): void =\n        if:\n            Instigator := DamageResult.Instigator?\n            Agent := Instigator.GetInstigatorAgent[]\n            ConditionalButton.IsHoldingItem[Agent]\n            Target := fort_character[DamageResult.Target]\n        then:\n            Superpowerused.Award(Agent)\n            spawn:\n                FreezePlayer(Target)\n\n    FreezePlayer(Target : fort_character)<suspends> : void =\n        \n        Target.PutInStasis(stasis_args{})\n        Sleep(FreezeTime)\n        Target.ReleaseFromStasis()",
  "external_calls": [
    "tags.verse"
  ]
}
