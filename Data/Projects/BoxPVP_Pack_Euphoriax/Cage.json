{
  "file_name": "Cage.verse",
  "questions": [
    "How do I create an ability that traps the nearest enemy player in a cage?",
    "What is the Verse code to find the closest player and teleport a prop to their location?",
    "How can I make a temporary cage trap that teleports away after a few seconds?"
  ],
  "explanation": "This script defines a 'Cage' device that allows a player of a specific class to trap the nearest enemy player. \n\n- **Class System:** The device checks a 'tracker_device' to ensure only players of the correct 'Class' can use the ability. Eligible players are granted an item to activate the power.\n- **Activation:** The ability is triggered by a 'signal_remote_manager_device'. When used, it initiates the 'FindClosestPlayer' logic.\n- **Core Logic:** The 'FindClosestPlayer' function iterates through all players in the game, calculates the distance to each one, and identifies the nearest opponent. It then teleports a creative prop (the 'CageBlue' object) to the target's location, trapping them. After a 3-second delay, the 'ResetCage' function is called, which teleports the cage prop back to its starting position, freeing the player.",
  "code": "using { /Fortnite.com/Devices }\nusing { /Fortnite.com/Characters }\nusing { /Verse.org/Simulation }\nusing { /Verse.org/Random }\nusing { /UnrealEngine.com/Temporary/Diagnostics }\nusing { /UnrealEngine.com/Temporary/SpatialMath }\n\nCage := class(creative_device):\n\n\n    @editable var Class : int = 0\n    @editable ClassTracker : tracker_device = tracker_device{}\n    @editable HUDablity : hud_message_device = hud_message_device{}\n\n    @editable Superpowerused : accolades_device = accolades_device{}\n\n    @editable SignalRemoteManager:signal_remote_manager_device = signal_remote_manager_device{}\n\n    @editable \n    ItemGranter: item_granter_device = item_granter_device{}\n\n    @editable\n    CageBlue:creative_prop = creative_prop{}\n\n    @editable\n    HUD:hud_message_device = hud_message_device{}\n\n    @editable\n    BeginPlace : vector3 = vector3{ X :=1000.0, Y := 1000.0, Z := 1000.0}\n\n    @editable\n    CageScale : vector3 = vector3{ X := 1.0, Y := 1.0, Z := 1.33333 }\n\n    StringToMessage<localizes>(value:string)<computes> : message = \"{value}\"\n\n    var DoTeleportInsteadOfVFX:logic = true\n\n    OnBegin<override>()<suspends>:void=\n        SignalRemoteManager.PrimarySignalEvent.Subscribe(OnRemoteClicked)\n        InitSpawners()\n        \n    InitSpawners() : void=\n        Spawners := FindCreativeObjectsWithTag(spawner{})\n        for (Obj : Spawners):\n            if (Spawner := player_spawner_device[Obj]):\n                Spawner.SpawnedEvent.Subscribe(OnPlayerSpawned)\n            \n    OnPlayerSpawned(Agent : agent): void=\n        if (Player := player[Agent]):\n            spawn{CheckClass(Agent)}\n\n    CheckClass(Agent : agent)<suspends>:void=\n        Sleep(1.0)\n        if(ClassTracker.GetValue(Agent) = Class):\n            HUDablity.Show(Agent)\n            ItemGranter.GrantItem(Agent)\n\n\n    OnRemoteClicked(Agent:agent):void=\n        if(ClassTracker.GetValue(Agent) = Class):\n            Print(\"remote clicked\")\n            FindClosestPlayer(Agent)\n\n    FindClosestPlayer(Agent:agent):void=\n        #go through all the players and find the closest\n        AllPlayers:[]player = GetPlayspace().GetPlayers()\n\n        PlayerCount:int = AllPlayers.Length\n\n        if(PlayerCount = 1):\n            Print(\"There is {PlayerCount} player in the game\")\n        else:\n            Print(\"There are {PlayerCount} players in the game\")\n\n        var ClosestPlayer:?agent = false\n        var DistanceToMe:float = 100000000.0\n        var FoundPlayer:logic = false\n        for(Player:AllPlayers):\n            if(Player <> Agent):    \n                #find the distance of this player to me\n                if(MyFC:fort_character = Agent.GetFortCharacter[]):\n                    if(OtherFC:fort_character = Player.GetFortCharacter[]):\n                        MyPos:vector3 = MyFC.GetTransform().Translation\n                        OtherPos:vector3 = OtherFC.GetTransform().Translation\n                        TotalDistance:float = Distance(MyPos, OtherPos) / 100.0\n                        if(TotalDistance < DistanceToMe):\n                            set FoundPlayer = true\n                            set DistanceToMe = TotalDistance\n                            set ClosestPlayer = option{Player}\n\n        if(FoundPlayer = true):\n            HUD.SetText(StringToMessage(\"You found the closest player!\"))\n            HUD.Show(Agent)\n            Superpowerused.Award(Agent)\n            #grab the player's current position\n            if(PlayerAgent:agent = agent[ClosestPlayer?]):\n                if(FC:fort_character = PlayerAgent.GetFortCharacter[]):\n                    Pos:transform = FC.GetTransform()\n                    if(DoTeleportInsteadOfVFX = true):\n                        if(CageBlue.TeleportTo[Pos.Translation + vector3{Z:=-60.0}, Pos.Rotation]):\n                            spawn:\n                                ResetCage()\n\n    ResetCage()<suspends>:void=\n        Sleep(3.0)\n        if (CageBlue.TeleportTo[BeginPlace, MakeRotation(CageScale, 0.0)]):\n\n    WaitingTime(Agent:agent)<suspends>:void=\n        Print(\"ff rusten\")\n        Sleep(4.0)\n\n        if (CageBlue.TeleportTo[BeginPlace, MakeRotation(CageScale, 0.0)]):",
  "external_calls": [
    "tags.verse"
  ]
}