{
  "file_name": "VampireHeal.verse",
  "questions": [
    "How do I create a lifesteal or vampire heal ability in Verse?",
    "What is the code to heal a player for a percentage of the damage they deal?",
    "How can I make a weapon that heals the user when they damage an enemy?"
  ],
  "explanation": "This script defines a 'VampireHeal' device that grants a lifesteal ability to players of a specific class. When an eligible player damages an enemy with a specific weapon, they are healed for a percentage of the damage dealt.\n\n- **Class System:** It uses a 'tracker_device' to ensure only players of the correct 'Class' receive the special weapon.\n- **Activation:** The logic is passive and event-driven. The script subscribes to the 'DamagedEvent' of every character in the game.\n- **Core Logic:** The 'HealAttacker' function is the event handler. When a player takes damage, it checks if the attacker is holding the item registered with the 'ConditionalButton'. If they are, the script calculates 14% of the damage dealt and calls `.Heal()` on the attacker's character, giving them health back.",
  "code": "using { /Fortnite.com/Devices }\nusing { /Fortnite.com/Characters }\nusing { /Fortnite.com/Game }\nusing { /Verse.org/Simulation }\nusing { /UnrealEngine.com/Temporary/Diagnostics }\n\n\nVampireHeal := class(creative_device):\n\n    @editable var Class : int = 0\n    @editable ClassTracker : tracker_device = tracker_device{}\n    @editable HUDablity : hud_message_device = hud_message_device{}\n\n    @editable ConditionalButton : conditional_button_device = conditional_button_device{}\n    @editable ItemGranter:item_granter_device = item_granter_device{}\n\n    @editable Superpowerused : accolades_device = accolades_device{}\n\n    OnBegin<override>()<suspends>:void=\n        InitSpawners()\n\n    InitSpawners() : void=\n        Spawners := FindCreativeObjectsWithTag(spawner{})\n        for (Obj : Spawners):\n            if (Spawner := player_spawner_device[Obj]):\n                Spawner.SpawnedEvent.Subscribe(OnPlayerSpawned)\n\n    OnPlayerSpawned(Agent : agent): void=\n        if (Player := player[Agent]):\n            spawn{GetWeapon(Agent)}\n\n    GetWeapon(Agent : agent)<suspends>:void=\n        Sleep(1.0)\n        if(ClassTracker.GetValue(Agent) = Class):\n            ItemGranter.GrantItem(Agent)\n            HUDablity.Show(Agent)\n            for (Player : GetPlayspace().GetPlayers(), FortCharacter := Player.GetFortCharacter[]):\n                FortCharacter.DamagedEvent().Subscribe(HealAttacker)\n            GetPlayspace().PlayerAddedEvent().Subscribe(HandlePlayerJoin)\n\n    HealAttacker( Result : damage_result) : void =\n        Amount := Result.Amount\n        if (Instigator := Result.Instigator?, Agent := Instigator.GetInstigatorAgent[], FortCharacter := Agent.GetFortCharacter[], ConditionalButton.IsHoldingItem[Agent]):\n            HealAmount := Amount * 0.14\n            FortCharacter.Heal(HealAmount)\n            Superpowerused.Award(Agent)\n            \n    HandlePlayerJoin ( Player : player ) : void =\n        if (FortCharacter := Player.GetFortCharacter[]):\n            FortCharacter.DamagedEvent().Subscribe(HealAttacker)",
  "external_calls": [
    "tags.verse"
  ]
}
